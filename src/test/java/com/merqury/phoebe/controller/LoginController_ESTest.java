/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 21 18:50:17 GMT 2018
 */

package com.merqury.phoebe.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.merqury.phoebe.beans.UsersFacade;
import com.merqury.phoebe.controller.LoginController;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LoginController_ESTest extends LoginController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LoginController loginController0 = new LoginController();
      // Undeclared exception!
      try { 
        loginController0.validateUsernamePassword();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.merqury.phoebe.controller.LoginController", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LoginController loginController0 = new LoginController();
      UsersFacade usersFacade0 = new UsersFacade();
      Injector.injectEntityManager(usersFacade0, (Class<?>) UsersFacade.class);
      Injector.validateBean(usersFacade0, (Class<?>) UsersFacade.class);
      Injector.inject(loginController0, (Class<?>) LoginController.class, "userFacadeLocal", (Object) usersFacade0);
      Injector.validateBean(loginController0, (Class<?>) LoginController.class);
      // Undeclared exception!
      try { 
        loginController0.validateUsernamePassword();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }
}
