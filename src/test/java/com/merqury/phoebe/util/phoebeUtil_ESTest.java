/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 26 21:00:35 GMT 2018
 */

package com.merqury.phoebe.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.merqury.phoebe.util.phoebeUtil;
import java.text.ParseException;
import java.util.Date;
import javax.xml.datatype.XMLGregorianCalendar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class phoebeUtil_ESTest extends phoebeUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = phoebeUtil.allNumeric(",");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        phoebeUtil.toXMLGregorianCalendarYYYYMMDD((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-2734), (-2710), 0);
      // Undeclared exception!
      try { 
        phoebeUtil.toXMLGregorianCalendarYYYYMMDD(mockDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        phoebeUtil.toXMLGregorianCalendar((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Calendar", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        phoebeUtil.dateFormatterYYYYMMDDHHMMssSSS((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        phoebeUtil.dateFormatterYYYYMMDDHHMMss((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        phoebeUtil.dateFormatterYYYYMMDD((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      try { 
        phoebeUtil.convertJuliantoGregorian("");
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Unparseable date: \"\"
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        phoebeUtil.convertJuliantoGregorian((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        phoebeUtil.allNumeric((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.merqury.phoebe.util.phoebeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Date date0 = phoebeUtil.toDate((XMLGregorianCalendar) null);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLGregorianCalendar xMLGregorianCalendar0 = phoebeUtil.convertJuliantoGregorian("7220");
      assertNotNull(xMLGregorianCalendar0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      phoebeUtil phoebeUtil0 = new phoebeUtil();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Date date0 = phoebeUtil.CurrentDate();
      XMLGregorianCalendar xMLGregorianCalendar0 = phoebeUtil.toXMLGregorianCalendarYYYYMMDD(date0);
      Date date1 = phoebeUtil.toDate(xMLGregorianCalendar0);
      assertEquals("Fri Feb 14 00:00:00 GMT 2014", date1.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-2734), (-2710), 0);
      XMLGregorianCalendar xMLGregorianCalendar0 = phoebeUtil.toXMLGregorianCalendar(mockDate0);
      assertNotNull(xMLGregorianCalendar0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Date date0 = phoebeUtil.CurrentDate();
      Date date1 = phoebeUtil.dateFormatterYYYYMMDDHHMMss(date0);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date1.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Date date0 = phoebeUtil.CurrentDate();
      Date date1 = phoebeUtil.dateFormatterYYYYMMDDHHMMssSSS(date0);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date1.toString());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = phoebeUtil.allNumeric("d7Pc^mQ2O+n@[~(2q0");
      assertEquals("7220", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Date date0 = phoebeUtil.CurrentDate();
      Date date1 = phoebeUtil.dateFormatterYYYYMMDD(date0);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date1.toString());
  }
}
